//@author: youjun



	/**
	 * origin: C:\Users\bruce\desktop\main\TaskManagerProject\src\main\command\CommandController.java
	 */

 */
public class CommandController {
    private ManagerHolder managerHolder;
    private AliasController aliasController;

    public CommandController(ManagerHolder managerHolder,
            IAliasStorage aliasStorage, IFileInputOutput aliasFileInputOutput) {
        this.managerHolder = managerHolder;
        aliasController = new AliasController(aliasStorage, aliasFileInputOutput);
    }

    public Command getCommand(String commandString) {

        commandString = aliasController.replaceAlias(commandString);
        
        String[] split = commandString.split(" ", 2);
        String commandType = extractFirstToken(split);
        String arguments = extractSecondToken(split);

        BiFunction<String, ManagerHolder, Command> makeCommand;
        makeCommand = aliasController.getReservedCommand(commandType);
        
        Command command = makeCommand.apply(arguments, managerHolder);
        
        return command;
    }

    protected String extractSecondToken(String[] split) {
        String arguments = "";
        if (split.length >= 2) {
            assert split.length == 2;
            arguments = split[1];
        }
        return arguments;
    }

    protected String extractFirstToken(String[] split) {
        String commandType = "";
        if (split.length >= 1) {
            commandType = split[0];
        }
        return commandType;
    }
}

	// End of segment: C:\Users\bruce\desktop\main\TaskManagerProject\src\main\command\CommandController.java





	/**
	 * origin: C:\Users\bruce\desktop\main\TaskManagerProject\src\main\MainController.java
	 */

 */
public class MainController {
    private static final Logger log = TasklineLogger.getLogger();

    private final ManagerHolder managerHolder;
    private final IAliasStorage aliasStorage;
    private final IFileInputOutput aliasFileInputOutput;
    private boolean readyToExit;

    public MainController(ManagerHolder managerHolder,
            IAliasStorage aliasStorage, IFileInputOutput aliasFileInputOutput) {
        this.managerHolder = managerHolder;
        this.aliasStorage = aliasStorage;
        this.aliasFileInputOutput = aliasFileInputOutput;
    }

    public String runCommand(String commandString) {
        if (commandString.trim().isEmpty()) {
            return "";
        }

        CommandController commandController = new CommandController(
                managerHolder, aliasStorage, aliasFileInputOutput);
        Command curCommand = commandController.getCommand(commandString);
        log.log(Level.FINE, "Execute Command: " + curCommand.getClass().getName());
        Response curResponse = curCommand.execute();

        if (curResponse.isExitResponse()) {
            setReadyToExit();
        }
        Formatter formatter = new Formatter();
        return formatter.format(curResponse);
    }

    public boolean isReadyToExit() {
        return readyToExit;
    }

    private void setReadyToExit() {
        readyToExit = true;
    }
}

	// End of segment: C:\Users\bruce\desktop\main\TaskManagerProject\src\main\MainController.java





